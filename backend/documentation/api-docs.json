{
  "swagger": "2.0",
  "info": {
    "description": "This is a PIXAGRAM-API documentation server.",
    "version": "1.0.0",
    "title": "PIXAGRAM-API Documentation",
    "termsOfService": "",
    "contact": {
      "email": "kanika.nadkarni9@gmail.com"
    }
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "post",
      "description": "All API's related to user posts in Pixagram"
    },
    {
      "name": "user",
      "description": "API's related to Pixagram registered users"
    }
  ],
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "paths": {
    "/api/post/{id}": {
      "get": {
        "tags": [
          "post"
        ],
        "summary": "Get post by id",
        "description": "",
        "operationId": "getPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The post will be fetched by id.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          },
          "404": {
            "description": "Warning",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "post"
        ],
        "summary": "edit a post",
        "description": "",
        "operationId": "editPost",
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The post will be edited by id.",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "caption",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "caption": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Warning",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "post"
        ],
        "summary": "delete a post",
        "description": "",
        "operationId": "deletePost",
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The post will be edited by id.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Warning",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/post/user/{email}": {
      "get": {
        "tags": [
          "post"
        ],
        "summary": "Find posts realted to user by user login-email",
        "description": "Returns all posts related to user",
        "operationId": "getPostOfUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "email of user to return all posts",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/Posts"
            }
          },
          "404": {
            "description": "posts not found"
          }
        }
      },
      "post": {
        "tags": [
          "post"
        ],
        "summary": "Insert new post with image for a logged-in user with parameter as his login-email",
        "description": "",
        "operationId": "createPostofUser",
        "security": [
          {
            "Bearer": []
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "logged-in email of an user",
            "required": true,
            "type": "string"
          },
          {
            "name": "image",
            "in": "formData",
            "description": "file to upload",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/NewPost"
            }
          },
          "404": {
            "description": "Error"
          }
        }
      }
    },
    "/api/post/like/{id}": {
      "post": {
        "tags": [
          "post"
        ],
        "summary": "like a post",
        "description": "",
        "operationId": "likePost",
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The post will be fetched by id.",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "email in body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Warning",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/post/unlike/{id}": {
      "delete": {
        "tags": [
          "post"
        ],
        "summary": "unlike a post",
        "description": "",
        "operationId": "unlikePost",
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id as parameter.",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "email in body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "postunlike": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Warning",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/post/comment/{id}": {
      "post": {
        "tags": [
          "post"
        ],
        "summary": "add a comment",
        "description": "",
        "operationId": "addComment",
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The post will be edited by id.",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "object in body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "content": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "c_id": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "Warning",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "post"
        ],
        "summary": "edit a comment",
        "description": "",
        "operationId": "editComment",
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id for a post.",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "caption",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "content": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Warning",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "post"
        ],
        "summary": "delete a comment",
        "description": "",
        "operationId": "deleteComment",
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "comment id.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Warning",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/post/comments/{id}": {
      "get": {
        "tags": [
          "post"
        ],
        "summary": "Getting all comments for a post",
        "description": "",
        "operationId": "getComments",
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Post-id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/Comments"
            }
          },
          "404": {
            "description": "Warning",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get all users",
        "description": "",
        "operationId": "getAllUsers",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          },
          "404": {
            "description": "error message",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/{email}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get user by user e-mail",
        "description": "",
        "operationId": "getUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "The user will be fetched by user e-mail.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "user"
        ],
        "summary": "editing user profile",
        "description": "",
        "operationId": "editUserProfile",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "The user will be fetched by user e-mail.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "User registration/profile information fields to be saved",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserProfile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "error message",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/signup": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Registers new user in the system",
        "description": "",
        "operationId": "signupNewUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User registration/profile information fields to be saved",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserProfile"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/UserProfile"
            }
          },
          "400": {
            "description": "Registration failed"
          }
        }
      }
    },
    "/api/user/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "loginUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User log-in credentials",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginCredentials"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/LoginToken"
            }
          },
          "401": {
            "description": "Authentication failed"
          }
        }
      }
    },
    "/api/user/follow/{email}": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create User follower record in follows.",
        "description": "",
        "operationId": "followUser",
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "user2 email.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "user1 email.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/Follower"
            }
          },
          "400": {
            "description": "Error message",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/unfollow/{email1}{email2}": {
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Unfollow perviously followed person.",
        "description": "",
        "operationId": "unfollowUser",
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email1",
            "in": "path",
            "description": "user1 email.",
            "required": true,
            "type": "string"
          },
          {
            "name": "email2",
            "in": "path",
            "description": "user2 email.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error message",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/following/{email}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get all the users which the current user is following",
        "description": "",
        "operationId": "getFollowing",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "Users email.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          },
          "404": {
            "description": "Error message",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/followers/{email}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get all followers of a user",
        "description": "",
        "operationId": "getFollowers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "Users email.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          },
          "404": {
            "description": "Error message",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/followerscount/{email}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get number of followers of a user",
        "description": "",
        "operationId": "getFollowerCount",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "Users email.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "followercount": {
                  "type": "integer"
                }
              }
            }
          },
          "404": {
            "description": "Error message",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/followingcount/{email}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get number of users the current user is following",
        "description": "",
        "operationId": "getFollowingCount",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "Users email.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "followercount": {
                  "type": "integer"
                }
              }
            }
          },
          "404": {
            "description": "Error message",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/activityFeed/{email}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "getting posts of the people the current user is following in chronological order",
        "description": "",
        "operationId": "getActivityFeedPosts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "Users email.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          },
          "404": {
            "description": "Error message",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/likedposts/{email}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get all followers of a user",
        "description": "",
        "operationId": "getLikedPosts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "Users email.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/Posts"
            }
          },
          "404": {
            "description": "Error message",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/explore/{email}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get follow suggestios for a user",
        "description": "",
        "operationId": "getFollowSuggestions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "Users email.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          },
          "404": {
            "description": "Error message",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/editProfile/{email}": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Edit profile photo af an user",
        "description": "",
        "operationId": "editProfilePhoto",
        "security": [
          {
            "Bearer": []
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "Users email.",
            "required": true,
            "type": "string"
          },
          {
            "name": "profileimage",
            "in": "formData",
            "description": "image to be uploaded",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Error message",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/editCover/{email}": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Edit Cover photo af an user",
        "description": "",
        "operationId": "editCoverPhoto",
        "security": [
          {
            "Bearer": []
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "Users email.",
            "required": true,
            "type": "string"
          },
          {
            "name": "coverImage",
            "in": "formData",
            "description": "image to be uploaded as cover photo",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Error message",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Post": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "Post": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "postTimestamp": {
              "type": "string",
              "format": "date-time"
            },
            "imagePath": {
              "type": "string"
            },
            "caption": {
              "type": "string"
            },
            "userEmail": {
              "type": "string"
            }
          }
        }
      }
    },
    "Posts": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "photos": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "postTimestamp": {
                "type": "string",
                "format": "date-time"
              },
              "imagePath": {
                "type": "string"
              },
              "caption": {
                "type": "string"
              },
              "userEmail": {
                "type": "string"
              }
            }
          }
        }
      },
      "xml": {
        "name": "Category"
      }
    },
    "NewPost": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "photos": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "imagePath": {
                "type": "string"
              },
              "caption": {
                "type": "string"
              },
              "email": {
                "type": "string"
              }
            }
          }
        }
      },
      "xml": {
        "name": "Category"
      }
    },
    "Users": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "email": {
                "type": "string"
              },
              "pswd": {
                "type": "string"
              },
              "fname": {
                "type": "string"
              },
              "lname": {
                "type": "string"
              },
              "bio": {
                "type": "string"
              },
              "dob": {
                "type": "string"
              },
              "gender": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "profileimagePath": {
                "type": "string"
              },
              "coverimagePath": {
                "type": "string"
              },
              "visibility": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "email": {
          "type": "string"
        },
        "pswd": {
          "type": "string"
        },
        "fname": {
          "type": "string"
        },
        "lname": {
          "type": "string"
        },
        "bio": {
          "type": "string"
        },
        "dob": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "profileimagePath": {
          "type": "string"
        },
        "coverimagePath": {
          "type": "string"
        },
        "visibility": {
          "type": "string"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "LoginCredentials": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "LoginToken": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "expiresIn": {
          "type": "integer",
          "format": "int64"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "UserProfile": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "fname": {
          "type": "string"
        },
        "lname": {
          "type": "string"
        },
        "dob": {
          "type": "string",
          "format": "date-time"
        },
        "gender": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "bio": {
          "type": "string"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "Follower": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "follow": {
          "type": "object",
          "properties": {
            "user1": {
              "type": "string"
            },
            "email": {
              "type": "string"
            }
          }
        }
      }
    },
    "Comments": {
      "type": "object",
      "properties": {
        "fname": {
          "type": "string"
        },
        "lname": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "commentsTimeStamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    }
  }
}